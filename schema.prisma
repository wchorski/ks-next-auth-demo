// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  nameLast  String    @default("")
  authId    String    @unique @default("")
  email     String    @unique @default("")
  password  String    @default("")
  image     String    @default("")
  role      Role?     @relation("User_role", fields: [roleId], references: [id])
  roleId    String?   @map("role")
  posts     Post[]    @relation("Post_author")
  createdAt DateTime? @default(now())

  @@index([roleId])
}

model Role {
  id                         String  @id @default(cuid())
  name                       String  @unique @default("")
  canManageProducts          Boolean @default(false)
  canManageAddons            Boolean @default(false)
  canManageBookings          Boolean @default(false)
  canManageAvailability      Boolean @default(false)
  canManageEvents            Boolean @default(false)
  canManageAnnouncements     Boolean @default(false)
  canManageTickets           Boolean @default(false)
  canSeeOtherUsers           Boolean @default(false)
  canManageUsers             Boolean @default(false)
  canManageRoles             Boolean @default(false)
  canManageCart              Boolean @default(false)
  canManageOrders            Boolean @default(false)
  canManageCategories        Boolean @default(false)
  canManageTags              Boolean @default(false)
  canManageLocations         Boolean @default(false)
  canManagePages             Boolean @default(false)
  canManagePosts             Boolean @default(false)
  canManageServices          Boolean @default(false)
  canManageSubscriptionPlans Boolean @default(false)
  canManageSubscriptionItems Boolean @default(false)
  canManageCoupons           Boolean @default(false)
  assignedTo                 User[]  @relation("User_role")
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")

  @@index([authorId])
}
